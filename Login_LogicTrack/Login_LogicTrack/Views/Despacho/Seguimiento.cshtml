
@{
    ViewBag.Title = "Seguimiento";
    Layout = "~/Views/_Layout.cshtml";
}

<style>
    #map {
        height: 400px;
        /* The height is 400 pixels */
        width: 100%;
        /* The width is the width of the web page */
    }
</style>

<div>
    <h1>Seguimiento</h1>

    <div id="chartContainerPie" class="row">
        <div class="col-md-12">
            <canvas id="myChartSeguimiento"> </canvas>
        </div>
    </div>

    <div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Documento de Entrega</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group row">
                            <label for="Fecha" class="col-sm-2 col-form-label">Fecha Entrega</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" name="Fecha" id="Fecha" value="@DateTime.Now.Date.ToShortDateString()" disabled>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="Encargado" class="col-sm-2 col-form-label">Encargado de Recepcion</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="Encargado">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="Observacion" class="col-sm-2 col-form-label">Observación</label>
                            <div class="col-sm-10">
                                <textarea class="form-control" id="Observacion" rows="3"></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <input class="btn btn-primary" id="boton" type="submit" value="Finalizar">

                </div>
            </div>
        </div>
    </div>

    <br />

    <!-- Button trigger modal -->
    <div class="align-content-center justify-content-center" style="text-align:center">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal1">
            Finalizar Transporte
        </button>
    </div>


</div>

<h3>My Google Maps Demo</h3>

<div id="chartContainerPie" class="row">
    <div class="col-md-12">
        <div id="map"></div>
    </div>
</div>

<script type="text/javascript">
    function GenerateRuntimeGraph(actionName, tipo, divID, graficaNombre) {
        $.ajax({
            type: "POST",
            url: '/Despacho/' + actionName,
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (chData) {
                var aData = chData;
                var aLabels = aData[0];
                var aDatasetMin = aData[1];
                var aDatasetMax = aData[2];
                var aDatasetMed = aData[3];
                //For Bar Chart
                var ctx = document.getElementById(divID).getContext('2d');
                var myChart = new Chart(ctx, {
                    type: tipo,
                    data: {
                        labels: aLabels,
                        datasets: [{
                            type: 'line',
                            label: 'Valor Minimo',
                            data: aDatasetMin,
                            fill: false,
                            backgroundColor: 'rgb(54, 162, 235)',
                        },
                        {
                            type: 'line',
                            label: 'Valor Maximo',
                            data: aDatasetMax,
                            fill: false,
                            backgroundColor: 'rgba(255, 99, 132, 0.5)',
                        },
                        {
                            type: 'line',
                            label: 'Valor Medicion',
                            data: aDatasetMed,
                            fill: false,
                            backgroundColor: 'rgb(75, 192, 192)',
                        }
                        ]
                    },
                    options: {

                        indexAxis: 'y',
                        scaleShowValues: true,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true,
                                    min: 0


                                }
                            }],
                            xAxes: [{
                                ticks: {
                                    autoSkip: true,
                                    min: 0
                                }

                            }]
                        }
                    }
                });
            }
        });
    }


    Window.onload = GenerateRuntimeGraph("CrearGraficaSeguimiento", "line", "myChartSeguimiento", "Seguimiento por Hora")

    setInterval(function () {
        GenerateRuntimeGraph("CrearGraficaSeguimiento", "line", "myChartSeguimiento", "Seguimiento por Hora");
    }, 60000);</script>

<script type="text/javascript">

    $("#boton").click(function () {

    var expenseobject = {
    fechaCreacion:$('#Fecha').val() ,
    encargadoRecepcion: $('#Encargado').val() ,
    observacion: $('#Observacion').val(),

    };

    console.log(expenseobject);

        $.ajax({
            url: '@Url.Action("Create", "Entregas")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ entrega: expenseobject }),
            success: function (result) {

             }
            });

            });
</script>

<script>


    function initMap() {
        const directionsRenderer = new google.maps.DirectionsRenderer();
        const directionsService = new google.maps.DirectionsService();
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 14,
            center: { lat: -12.104061, lng: -76.962902 },
        });
        directionsRenderer.setMap(map);
        calculateAndDisplayRoute(directionsService, directionsRenderer);

    }

    function calculateAndDisplayRoute(directionsService, directionsRenderer) {

        directionsService.route(
            {
                origin: { lat: -12.104061, lng: -76.962902 },
                destination: { lat: -12.1092622, lng: -76.9719717 },
                // Note that Javascript allows us to access the constant
                // using square brackets and a string value as its
                // "property."
                travelMode: 'DRIVING'
            },
            (response, status) => {
                if (status == "OK") {
                    directionsRenderer.setDirections(response);
                } else {
                    window.alert("Directions request failed due to " + status);
                }
            }
        );
    }
</script>




